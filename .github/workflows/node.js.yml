# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs
# test
name: Build step

on:
  push:
    branches: 
     - main
     - dev
     - staging
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js 
      uses: actions/setup-node@v3
      with:
        node-version: '16.x'
    - run: npm ci
    



 
  build-and-push-docker-image :
    name: login to DockerHub and push image to repositorie
    runs-on: ubuntu-latest
    needs: ['build']
    steps:
     - name: Checkout code
       uses: actions/checkout@v3
     - name: Login to DockerHub
       uses: docker/login-action@v2
       with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
     - name: Build image and push to Docker Hub 
       uses: docker/build-push-action@v2
       with:
          # relative path to the place where source code with Dockerfile is located
          context: ./
          # Note: tags has to be all lower-case
          tags: |
            houwayda/test:${{ github.sha }} 
            
          # build on feature branches, push only on main branch
          push: ${{ github.ref == 'refs/heads/main' }}
     
       
  update-manifest-stage:
     if: github.ref == 'refs/heads/staging'
     runs-on: ubuntu-latest
     needs: ['build-and-push-docker-image']
     steps:
      - uses: actions/checkout@v3
        with:
          repository: houwayda9/argorepo
          ref: 'main'
          token: ${{ secrets.G_TOKEN3 }}
      
      - name: setup git config
        run: |
          git config --global user.email ${{ secrets.USER_EMAIL }}
          git config --global user.name ${{ secrets.USER_NAME }}
          echo ${{ github.sha }}
          sed -i "s/houwayda\/test:\(.*\)/houwayda\/test:${{ github.sha }}/g" deployment.yaml
          git add -A
          git commit -am "Update image for - ${{ github.sha }}"
          echo ${{ github }}
          git push origin staging
 
  
  update-kustomize-file:
     if: github.ref == 'refs/heads/main'
     runs-on: ubuntu-latest
     needs: ['build-and-push-docker-image']
     steps:
      - name: Checkout another repository
        uses: actions/checkout@v2
        with:
          repository: houwayda9/kustomize
          ref: main 
          token: ${{ secrets.G_TOKEN3 }}
          path: houwayda9/kustomize 
      - name: Debug
        run: |
         cd houwayda9/kustomize/kustomize
         ls -l  
         cd base
         sed -i "s|newTag: .*|newTag: ${{ github.sha }}|" kustomization.yaml 
         cat kustomization.yaml
         ls -l
      - name: Update Kustomize file
        run: |
            pwd
            cd houwayda9/kustomize/kustomize/base
            git config --global user.email ${{ secrets.USER_EMAIL }}
            git config --global user.name ${{ secrets.USER_NAME }}
            git add kustomization.yaml
            git commit -m "Update image for - ${{ github.sha }}"
            git push origin main
            
   
  update-kustomize-file-overrlays:
     if: github.ref == 'refs/heads/dev'
     runs-on: ubuntu-latest
     needs: ['build-and-push-docker-image']
     steps:
      - name: Checkout another repository
        uses: actions/checkout@v2
        with:
          repository: houwayda9/kustomize
          ref: dev 
          token: ${{ secrets.G_TOKEN3 }}
          path: houwayda9/kustomize 
      - name: Debug
        run: |
         cd houwayda9/kustomize/kustomize
         ls -l  
         cd overlays/dev
         sed -i "s|newTag: .*|newTag: ${{ github.sha }}|" kustomization.yaml 
         cat kustomization.yaml
         ls -l
      - name: Update Kustomize file
        run: |
            pwd
            cd houwayda9/kustomize/kustomize/overlays/dev
            git config --global user.email ${{ secrets.USER_EMAIL }}
            git config --global user.name ${{ secrets.USER_NAME }}
            git add kustomization.yaml
            git commit -m "Update image for - ${{ github.sha }}"
            git push origin dev
            
      
          
           
          
    
